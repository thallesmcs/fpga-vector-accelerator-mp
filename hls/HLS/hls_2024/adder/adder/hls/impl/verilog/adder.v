// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adder_adder,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007s-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.915000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=15,HLS_VERSION=2024_2}" *)

module adder (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c,
        c_ap_vld,
        a,
        b,
        ap_rst
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] c;
output   c_ap_vld;
input  [7:0] a;
input  [7:0] b;
input   ap_rst;

reg c_ap_vld;

wire    ap_ce_reg;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        c_ap_vld = 1'b1;
    end else begin
        c_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign c = (b + a);

endmodule //adder
