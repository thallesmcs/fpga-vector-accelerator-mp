// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_function_top_function,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007s-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.552000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=78,HLS_VERSION=2024_2}" *)

module top_function (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_a_soma,
        input_b_soma,
        input_a_sub,
        input_b_sub,
        output_soma,
        output_soma_ap_vld,
        output_subtracao,
        output_subtracao_ap_vld,
        ap_rst
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input_a_soma;
input  [31:0] input_b_soma;
input  [31:0] input_a_sub;
input  [31:0] input_b_sub;
output  [31:0] output_soma;
output   output_soma_ap_vld;
output  [31:0] output_subtracao;
output   output_subtracao_ap_vld;
input   ap_rst;

reg output_soma_ap_vld;
reg output_subtracao_ap_vld;

wire    ap_ce_reg;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_soma_ap_vld = 1'b1;
    end else begin
        output_soma_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        output_subtracao_ap_vld = 1'b1;
    end else begin
        output_subtracao_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign output_soma = (input_b_soma + input_a_soma);

assign output_subtracao = (input_a_sub - input_b_sub);

endmodule //top_function
