-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hello_world is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    valor : IN STD_LOGIC_VECTOR (31 downto 0);
    mensagem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    mensagem_ce0 : OUT STD_LOGIC;
    mensagem_we0 : OUT STD_LOGIC;
    mensagem_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of hello_world is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hello_world_hello_world,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z007s-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.911000,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=23,HLS_SYN_LUT=177,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln4_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln4_reg_80 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_idle : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_ready : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_ce0 : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_we0 : STD_LOGIC;
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal mensagem_we0_out : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal mensagem_we0_local : STD_LOGIC;
    signal mensagem_ce0_local : STD_LOGIC;
    signal mensagem_address0_local : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component hello_world_hello_world_Pipeline_VITIS_LOOP_7_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mensagem_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        mensagem_ce0 : OUT STD_LOGIC;
        mensagem_we0 : OUT STD_LOGIC;
        mensagem_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66 : component hello_world_hello_world_Pipeline_VITIS_LOOP_7_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start,
        ap_done => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done,
        ap_idle => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_idle,
        ap_ready => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_ready,
        mensagem_address0 => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_address0,
        mensagem_ce0 => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_ce0,
        mensagem_we0 => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_we0,
        mensagem_d0 => grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (icmp_ln4_fu_74_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_ready = ap_const_logic_1)) then 
                    grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln4_reg_80 <= icmp_ln4_fu_74_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln4_fu_74_p2, grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (icmp_ln4_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (icmp_ln4_fu_74_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done)
    begin
        if ((grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start <= grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_ap_start_reg;
    icmp_ln4_fu_74_p2 <= "1" when (valor = ap_const_lv32_1) else "0";

    mensagem_address0_assign_proc : process(grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_address0, ap_CS_fsm_state2, mensagem_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mensagem_address0 <= grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_address0;
        else 
            mensagem_address0 <= mensagem_address0_local;
        end if; 
    end process;


    mensagem_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln4_fu_74_p2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mensagem_address0_local <= ap_const_lv64_D(7 - 1 downto 0);
        elsif (((icmp_ln4_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            mensagem_address0_local <= ap_const_lv64_0(7 - 1 downto 0);
        else 
            mensagem_address0_local <= "XXXXXXX";
        end if; 
    end process;


    mensagem_ce0_assign_proc : process(grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_ce0, ap_CS_fsm_state2, mensagem_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mensagem_ce0 <= grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_ce0;
        else 
            mensagem_ce0 <= mensagem_ce0_local;
        end if; 
    end process;


    mensagem_ce0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln4_fu_74_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (icmp_ln4_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            mensagem_ce0_local <= ap_const_logic_1;
        else 
            mensagem_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    mensagem_d0_assign_proc : process(grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_d0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mensagem_d0 <= grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_d0;
        else 
            mensagem_d0 <= ap_const_lv8_0;
        end if; 
    end process;


    mensagem_we0_assign_proc : process(grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_we0, ap_CS_fsm_state2, mensagem_we0_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mensagem_we0 <= grp_hello_world_Pipeline_VITIS_LOOP_7_1_fu_66_mensagem_we0;
        else 
            mensagem_we0 <= (mensagem_we0_out or ap_const_logic_0);
        end if; 
    end process;


    mensagem_we0_local_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln4_fu_74_p2, icmp_ln4_reg_80, ap_CS_fsm_state3)
    begin
        if ((((icmp_ln4_reg_80 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_1) and (icmp_ln4_fu_74_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            mensagem_we0_local <= ap_const_logic_1;
        else 
            mensagem_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    mensagem_we0_out <= mensagem_we0_local;
end behav;
